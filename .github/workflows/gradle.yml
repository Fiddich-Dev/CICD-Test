name: Build and Deploy

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Create .env file
      run: |
        cat <<EOF > .env
        
        DB_URL=${{ secrets.DB_URL }}
        DB_USERNAME=${{ secrets.DB_USERNAME }}
        DB_PASSWORD=${{ secrets.DB_PASSWORD }}

        REDIS_HOST=${{ secrets.REDIS_HOST }}
        REDIS_PORT=${{ secrets.REDIS_PORT }}
        
        SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
        SMTP_PORT=${{ secrets.SMTP_PORT }}

        JWT_SECRET=${{ secrets.JWT_SECRET }}
        
        EOF

    - name: Build
      run: ./gradlew clean build

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.APP_NAME }} .
    - name: Save Docker image to archive
      run: |
        docker save ${{ secrets.APP_NAME }} | gzip > ${GITHUB_SHA}.tar.gz
      
    - name: Copy image to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "${{ github.sha }}.tar.gz"
        target: "/home/${{ secrets.EC2_USER }}/"
    
    - name: SSH into EC2 and run container
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker stop ${{ secrets.APP_NAME }} || true
          docker rm ${{ secrets.APP_NAME }} || true
          gunzip -f ${{ github.sha }}.tar.gz
          docker load -i ${{ github.sha }}.tar
          docker run -d --name ${{ secrets.APP_NAME }} -p 8080:8080 ${{ secrets.APP_NAME }}
